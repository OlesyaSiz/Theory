Техники тестирования требований :
 
1) Взаимный просмотр:
беглый просмотр — автор показывает свою работу коллегам, они в свою очередь дают свои рекомендации, высказывают свои вопросы и замечания;
технический просмотр — выполняется группой специалистов;
формальная инспекция — привлекается большое количество специалистов, представляет собой структурированный, систематизированный и документированный подход. Минус такого варианта — тратится много времени.
2) Вопросы — если возникают вопросы, то можно спрашивать у представителей заказчика, более опытных коллег.

3) Тест-кейсы и чек-листы — хорошее требование должно быть проверяемым, чтобы это определить можно использовать чек-листы или полноценные тест-кейсы. Если можно быстро придумать несколько пунктов чек-листа — это уже хороший знак.  

4) Исследование поведения системы — необходимо мысленно смоделировать процесс работы пользователя с системой, созданной по тестируемым требованиям, после этого определить неоднозначные варианты определения системы.

5) Рисунки — графическое представление дает наглядное представление приложения, на рисунке проще увидеть, что какие-то элементы не стыкуются, где-то чего-то не хватает и т.д.

6) Прототипирование — сделав наброски пользовательского интерфейса, легко оценить применить применение тех или иных пользовательских решений.

Характеристики хороших требований:

Завершенность (требование должно содержать всю информацию, необходимую для разработчиков).
Ясность (требования должны быть понятными).
Корректность и согласованность (требование должно четко указывать на то, что должно выполнять приложение).
Проверяемость (способ однозначной проверки выполнено требование или нет).
Необходимость и полезность при эксплуатации.
Осуществимость (определяется балансом между ценностью и требуемыми ресурсами).
Модифицируемость (набор требований должен быть таким, чтобы его можно было легко модифицировать, при этом не изменяя требования в других местах).
Прослеживаемость (возможность  отследить связь между требованием и другими артефактами проекта, каждое требование имеет  уникальный идентификатор, по которому оно легко прослеживается).
Упорядоченным по важности, стабильности и срочности.

Проблемы, которые возникают при работе с требованиями:
Проблемы незавершенности.
Проблемы противоречивости.
Проблемы некорректности.
Проблемы двусмысленности.
Проблемы непроверяемости.
Проблемы непроранжированности.


Acceptance Criteria (Критерии приемки).
Если пользовательскую историю создают как некую формулировку намерения, чтобы команда была свободна в поиске решения, то критерии приемки — это точные детали, уникальные для каждой User Story, набор условий, подтверждающий, что она реализована.

Критерии приемки всегда можно проверить по четкому параметру «да/нет». Нельзя выполнить какой-то критерий наполовину: он либо выполнен, либо нет. Благодаря Acceptance Criteria команда разработки знает, как должен выглядеть готовый результат конкретного требования.

В целом Acceptance Criteria должны соответствовать следующим характеристикам:

1) Бинарные: могут иметь только два уникальных результата — успех или отказ. Не может быть термина «частичный успех», потому что критерий приемки всегда должен давать «зеленый» или «красный».
2) Однозначные: их можно интерпретировать только одним способом. Неправильно прописывать: «Форма окрашена в яркий цвет» или «Система должна быть user friendly», ведь такие критерии можно интерпретировать по-разному.
3) Подтверждаемые: должны быть написаны так, чтобы клиент мог быстро их проверить.
4) Полные: список критериев должен включать все функциональные требования. Все, что нужно сделать по каждому требованию, описывают в критериях приемки.